package com.bbva.czic.cards.facade.v01;

import com.bbva.czic.cards.business.ISrvIntCardCharge;
import com.bbva.czic.dto.net.CardCharge;
import com.bbva.jee.arq.spring.core.log.I18nLog;
import com.bbva.jee.arq.spring.core.log.I18nLogFactory;
import com.bbva.jee.arq.spring.core.servicing.annotations.SMC;
import com.bbva.jee.arq.spring.core.servicing.annotations.SN;
import com.bbva.jee.arq.spring.core.servicing.annotations.VN;
import com.bbva.jee.arq.spring.core.servicing.utils.BusinessServicesToolKit;
import com.wordnik.swagger.annotations.*;
import org.apache.cxf.jaxrs.model.wadl.ElementClass;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.ws.rs.*;
import javax.ws.rs.core.HttpHeaders;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriInfo;
import java.util.List;


@Path("/V01")
@SN(registryID="SN201400004",logicalID="cards")
@VN(vnn="V01")
@Api(value="/cards/V01",description="Cards REST service.")
@Produces({ MediaType.APPLICATION_JSON})
@Service
public class SrvCardsV01 implements ISrvCardsV01, com.bbva.jee.arq.spring.core.servicing.utils.ContextAware {

	private static I18nLog log = I18nLogFactory.getLogI18n(SrvCardsV01.class,"META-INF/spring/i18n/log/mensajesLog");

	public HttpHeaders httpHeaders;
	
	@Autowired
	BusinessServicesToolKit bussinesToolKit;
	

	public UriInfo uriInfo;
	
	@Override
	public void setUriInfo(UriInfo ui) {
		this.uriInfo = ui;		
	}

	@Override
	public void setHttpHeaders(HttpHeaders httpHeaders) {
		this.httpHeaders = httpHeaders;
	}
	
	@Autowired
	ISrvIntCardCharge srvIntCardCharge;

	
	@ApiOperation(value="Servicio multicanal de cards", notes="Servicio multicanal de cards",response=Response.class)
	@ApiResponses(value = {
		@ApiResponse(code = -1, message = "aliasGCE1"),
		@ApiResponse(code = -1, message = "aliasGCE2"),
		@ApiResponse(code = 200, message = "Found Sucessfully", response=List.class),
		@ApiResponse(code = 500, message = "Technical Error")})
	@GET
	@ElementClass(response = List.class)
	@Path("creditCard/{id}/cardCharges")
	@SMC(registryID="SMC201400008",logicalID="getCreditCardCharges")
	public List<CardCharge> getCreditCardCharges(
			@PathParam("id") String id,
			@ApiParam(value="filter param")@DefaultValue("null") @QueryParam("$filter") String filter,
			@ApiParam(value="fields param")@DefaultValue("null") @QueryParam("$fields") String fields,
			@ApiParam(value="expands param")@DefaultValue("null") @QueryParam("$expands") String expands,
			@ApiParam(value="order by param")@DefaultValue("null") @QueryParam("$sort") String sort) {
		//TODO: autogenerated, complete implementation using internal service
		return null;
	}

	

}
